#version 450
#extension GL_GOOGLE_include_directive : require

#include "common.h"

// @HACK: this lets me just merge sort w/ one work group
layout(local_size_x = 256) in;

struct IndirectCmdData 
{
  uint vertexCount;
  uint instanceCount;
  uint firstVertex;
  uint firstInstance;
};

layout(std430, binding = 0) readonly buffer Particles 
{
  Particle particles[];
};

layout(std430, binding = 1) buffer Indices 
{
  uint liveParticles;
  uint particleIndices[];
};

layout(std430, binding = 2) buffer IndirectCommand
{
  IndirectCmdData cmd;
};

void main()
{
  uint idx = gl_GlobalInvocationID.x;

  uint base = idx - 1;
  uint mergeLen = 1;
  for (uint i = 0; i < 8; ++i)
  {
    if (base % 2 == 0)
    {
      uint i = idx;
      uint j = idx + mergeLen;
      while (i < mergeLen && j < mergeLen)
      {
        if (!particles[particleIndices[j]].isAlive || 
            particles[particleIndices[i]].distToCam <= particles[particleIndices[j]].distToCam)
        {
          ++i;
        }
        else
        {
          uint tmp = particleIndices[i];
          particleIndices[i] = particleIndices[j];
          particleIndices[j] = tmp;
          
          ++j;
        }
      }

      base /= 2;
    }

    barrier();
  }

  if (idx == 0)
  {
    cmd.vertexCount   = 6;
    cmd.instanceCount = liveParticles;
    cmd.firstVertex   = 0;
    cmd.firstInstance = 0;
  }
}

